[gd_scene load_steps=10 format=3 uid="uid://caao78fb6xba"]

[ext_resource type="Script" path="res://prtototyping/player/player.gd" id="1_1ikub"]
[ext_resource type="SpriteFrames" uid="uid://tt7vara404c8" path="res://prtototyping/character/sprite_frames.tres" id="1_wtdkr"]
[ext_resource type="Shader" path="res://shaders/outline.gdshader" id="2_0qtmk"]
[ext_resource type="Script" path="res://extra_scripts/follow.gd" id="3_7iu7l"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_0ga1l"]
size = Vector2(16, 42)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wk74f"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3nph4"]
shader = ExtResource("2_0qtmk")
shader_parameter/outline_color = Color(0.97, 0.2425, 0.65475, 1)
shader_parameter/progress = 1.0

[sub_resource type="GDScript" id="GDScript_0whg7"]
resource_name = "dash"
script/source = "extends Ability


@onready var sprite: AnimatedSprite2D = $\"../AnimatedSprite2D\"
@onready var player := $\"..\"
@export var dash_multiplier: float = 1.5
@export var dash_duration: float
var speed: float
var direction: float
var duration_time_elapsed: float
var is_dashing: bool
var has_dashed: bool

func _on_anim_finished():
	if sprite.animation == &\"dash_start\":
		sprite.play(&\"dash_loop\")


func physics_update(delta: float) -> void:
	if speed > player.speed:
		is_dashing = true
		has_dashed = true
		speed -= (1 + (1/dash_duration) - 1) * dash_multiplier * 100 * delta
	else:
		is_dashing = false
		speed = 0
	
	if is_dashing:
		player.velocity.x = direction * speed
		duration_time_elapsed += delta
	elif has_dashed:
			player.apply_gravity = true
			player.can_move = true
			if player.is_falling: sprite.play(&\"float\")
			duration_time_elapsed = 0.0
			has_dashed = false


func _ready() -> void:
	sprite.animation_finished.connect(_on_anim_finished)


func start(dash_direction: float):
	speed = player.speed * dash_multiplier
	direction = dash_direction
	player.apply_gravity = false
	player.can_move = false
	player.velocity.y = 0
	sprite.play(&\"dash_start\")
"

[sub_resource type="GDScript" id="GDScript_i50ve"]
resource_name = "roll"
script/source = "extends Ability


@onready var default_coll_shape := $\"../CollisionShape2D\"
@onready var roll_coll_shape := $\"../RollCollisionShape\"
@onready var sprite: AnimatedSprite2D = $\"../AnimatedSprite2D\"
@onready var player := $\"..\"
@export var speed: float = 512
var direction: float
var is_rolling: bool


func _on_anim_finished():
	if sprite.animation == &\"roll\":
		player.can_move = true
		default_coll_shape.disabled = false
		roll_coll_shape.disabled = true
		is_rolling = false


func physics_update(_delta: float) -> void:
	if is_rolling:
		player.velocity.x = direction * speed


func _ready() -> void:
	roll_coll_shape.disabled = true
	sprite.animation_finished.connect(_on_anim_finished)


func start(roll_direction: float):
	direction = roll_direction
	player.can_move = false
	default_coll_shape.disabled = true
	roll_coll_shape.disabled = false
	sprite.play(&\"roll\")
	is_rolling = true
"

[node name="Player" type="CharacterBody2D"]
script = ExtResource("1_1ikub")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_0ga1l")

[node name="RollCollisionShape" type="CollisionShape2D" parent="."]
position = Vector2(0, 11)
shape = SubResource("RectangleShape2D_wk74f")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_3nph4")
position = Vector2(0, -9)
sprite_frames = ExtResource("1_wtdkr")
animation = &"roll"

[node name="Camera2D" type="Camera2D" parent="." node_paths=PackedStringArray("target")]
top_level = true
script = ExtResource("3_7iu7l")
target = NodePath("..")

[node name="Dash" type="Node2D" parent="."]
script = SubResource("GDScript_0whg7")
dash_multiplier = 15.0
dash_duration = 0.2

[node name="Roll" type="Node2D" parent="."]
script = SubResource("GDScript_i50ve")
